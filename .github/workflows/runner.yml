on: push
jobs:
  deploy:
    outputs:
      task: ${{ steps.task.outputs.task }}
    runs-on: ubuntu-latest
    steps:
    - run: sudo curl https://github.com/iterative/terraform-provider-iterative/releases/download/v0.11.2/terraform-provider-iterative_linux_amd64 --output /bin/task && sudo chmod a+x /bin/task
    - run: task create --cloud=aws --region=us-east-1 --environment=REPO_TOKEN= --environment=GITHUB_*= cml runner --labels=cml | paste --delimiters= <(echo ::set-output name=task::) -
      id: task
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  train:
    needs: deploy
    runs-on: [self-hosted, cml]
    steps: 
    - run: |
        echo training...
  destroy:
    if: always()
    needs: [train, deploy]
    runs-on: ubuntu-latest
    steps:
    - run: sudo curl https://github.com/iterative/terraform-provider-iterative/releases/download/v0.11.2/terraform-provider-iterative_linux_amd64 --output /bin/task && sudo chmod a+x /bin/task
    - run: task delete --cloud=aws --region=us-east-1 ${{ needs.deploy.outputs.task }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
