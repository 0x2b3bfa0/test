on: workflow_dispatch
jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: matrix
        run: |
          python3 <<'END'
          import json
          import secrets
          with open("./matrix.json", "r") as file:
              items = set(json.dumps(item, sort_keys=True) for item in json.load(file))
              matrix = {secrets.token_hex(16): item for item in set(items)}
              print(
                  json.dumps(
                      {
                          "runner": list(matrix.keys()),
                          "include": [
                              {"runner": key, "item": value} for key, value in matrix.items()
                          ],
                      }
                  )
              )
          END
  deploy:
    needs: matrix
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: iterative/setup-cml@v1
      - run: cml runner --single --cloud=aws
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
          CML_RUNNER_LABELS: ${{ matrix.runner }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  train:
    needs: deploy
    strategy:
      matrix: ${{ needs.deploy.strategy.matrix }}
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v2
      - uses: iterative/setup-cml@v1
      - run: |
          echo "$FOREACH_ITEM_JSON" > item.json
          cml pr item.json
        env:
          FOREACH_ITEM_JSON: ${{ toJson(matrix.item) }}
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
